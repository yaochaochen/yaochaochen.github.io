<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>来自远方的程序猿</title>
  
  <subtitle>一起快乐入坑</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-06-12T03:24:42.905Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>yaochaochen</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title></title>
    <link href="http://yoursite.com/2019/06/12/Java8%E6%97%A5%E6%9C%9F%E6%97%B6%E9%97%B4%E6%93%8D%E4%BD%9C/"/>
    <id>http://yoursite.com/2019/06/12/Java8日期时间操作/</id>
    <published>2019-06-12T03:24:42.909Z</published>
    <updated>2019-06-12T03:24:42.905Z</updated>
    
    <content type="html"><![CDATA[<p>title: java8日期操作<br>date: 1560309882909<br>tags:java<br>categories:java新特性<br>Java8日期时间操作</p><h2 id="一：简介"><a href="#一：简介" class="headerlink" title="一：简介"></a><strong>一：简介</strong></h2><p>在java8之前 日期时间的API一直被开发者诟病，包括：Java.util.Date是可变类型SimpleDateFormat非线程安全等问题。故此，Java8引入了一套全新的日期时间处理API，新的API基于ISO标准日历系统。</p><h2 id="二-Java-util-Date不推荐使用"><a href="#二-Java-util-Date不推荐使用" class="headerlink" title="二:Java.util.Date不推荐使用"></a>二:Java.util.Date不推荐使用</h2><p>Calendar类虽然有所改进，但仍有很多需要改进的地方，所以对于严肃的日期/时间工作，每个人都建议使用Joda-Time. Java 8带来了由JSR-310定义的Joda-Time启发的新java.time.* package，旧的日期/日历类。<br>除了这个一般的缺陷(其中包括缺少一个时区组件以及在DateFormat中更好地处理日期格式化和无法使用非公历日历表示)的问题，有一些具体的问题，真的伤害Date类，包括年份与公元年年份偏移量为1900的事实。</p><p>日历有自己的问题，但即使早在JDK 1.1，显然java.util.Date不会削减它。即使日历是可以说是最差的JDK API，它已经采取到版本7尝试解决它。</p><h2 id="三：Java8初识时间日期"><a href="#三：Java8初识时间日期" class="headerlink" title="三：Java8初识时间日期"></a>三：Java8初识时间日期</h2><h3 id="实例1"><a href="#实例1" class="headerlink" title="实例1"></a>实例1</h3><p><code>//Clock时钟        Clock clock = Clock.systemDefaultZone();        long millis = clock.millis();        //获取指定时间点 用Instant         Instant instant = clock.instant();        //也可以取Date        Date legacyDate = Date.from(instant);</code></p><h3 id="实例2"><a href="#实例2" class="headerlink" title="实例2"></a>实例2</h3><p><code>//在新API中时区使用ZoneId来表示。        ZoneId.getAvailableZoneIds();        ZoneId zoneId1 = ZoneId.of(&quot;Europe/Berlin&quot;);        ZoneId zoneId2 = ZoneId.of(&quot;Brazil/East&quot;);        System.out.println(zoneId1.getRules());</code></p><h3 id="实例3"><a href="#实例3" class="headerlink" title="实例3"></a>实例3</h3><p><code>/LocalTime 本地时间        LocalTime localTime = LocalTime.now(zoneId1);        LocalTime localTime1 = LocalTime.now(zoneId2);        long hours = ChronoUnit.HOURS.between(localTime1,localTime);        System.out.println(hours);</code>      </p><h3 id="实例4"><a href="#实例4" class="headerlink" title="实例4"></a>实例4</h3><p><code>//LocalTime 提供了多种工厂方法来简化对象的创建，包括解析时间字符串。        LocalTime localTime2= LocalTime.of(23, 59, 59);        System.out.println(localTime);// 23:59:59        DateTimeFormatter germanFormatte = DateTimeFormatter.ofLocalizedTime(FormatStyle.SHORT).withLocale(Locale.GERMAN);        String leetTime = localTime2.format(germanFormatte).toString();        System.out.println(leetTime);</code></p><h2 id="四：相关API说明"><a href="#四：相关API说明" class="headerlink" title="四：相关API说明"></a>四：相关API说明</h2><p>  == nstant         时间戳<br>Duration        持续时间、时间差<br>LocalDate       只包含日期，比如：2018-09-24<br>LocalTime       只包含时间，比如：10:32:10<br>LocalDateTime   包含日期和时间，比如：2018-09-24 10:32:10<br>Peroid          时间段<br>ZoneOffset      时区偏移量，比如：+8:00<br>ZonedDateTime   带时区的日期时间<br>Clock           时钟，可用于获取当前时间戳</p><h1 id="java-time-format-DateTimeFormatter-时间格式化类"><a href="#java-time-format-DateTimeFormatter-时间格式化类" class="headerlink" title="java.time.format.DateTimeFormatter      时间格式化类     "></a>java.time.format.DateTimeFormatter      时间格式化类     </h1><h3 id="五：拓展"><a href="#五：拓展" class="headerlink" title="五：拓展"></a>五：拓展</h3><p><a href>  https://docs.oracle.com/javase/8/docs/api/  </a>        </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;title: java8日期操作&lt;br&gt;date: 1560309882909&lt;br&gt;tags:java&lt;br&gt;categories:java新特性&lt;br&gt;Java8日期时间操作&lt;/p&gt;
&lt;h2 id=&quot;一：简介&quot;&gt;&lt;a href=&quot;#一：简介&quot; class=&quot;header
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://yoursite.com/2019/06/11/%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%9E%8B/"/>
    <id>http://yoursite.com/2019/06/11/单例模型/</id>
    <published>2019-06-11T12:49:12.874Z</published>
    <updated>2019-06-11T12:49:12.868Z</updated>
    
    <content type="html"><![CDATA[<h1 id="单例模型"><a href="#单例模型" class="headerlink" title="单例模型"></a>单例模型</h1><h2 id="定义：保证一个类仅有一个实例，并且提供一个全局访问点"><a href="#定义：保证一个类仅有一个实例，并且提供一个全局访问点" class="headerlink" title="定义：保证一个类仅有一个实例，并且提供一个全局访问点"></a><strong>定义：</strong>保证一个类仅有一个实例，并且提供一个全局访问点</h2><h2 id="类型：创建型"><a href="#类型：创建型" class="headerlink" title="类型：创建型"></a>类型：创建型</h2><hr><h2 id="单例-使用场景"><a href="#单例-使用场景" class="headerlink" title="单例-使用场景"></a>单例-使用场景</h2><p>​        想确保任何情况下都绝对只有一个实例</p><h2 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h2><p>在内存里只有一个实例，减少了内存开销</p><p> 可以避免对资源的多重占用</p><p> 设置全局访问点，严格控制访问</p><h2 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h2><p>没有接口，需要扩展代码</p><h2 id="单例-懒汉型"><a href="#单例-懒汉型" class="headerlink" title="单例-懒汉型"></a>单例-懒汉型</h2><p><img src="/%E7%AE%80%E4%B9%A6%E7%B4%A0%E6%9D%90/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%9E%8B/%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%9E%8B/%E6%87%92%E6%B1%89test.png" alt></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;单例模型&quot;&gt;&lt;a href=&quot;#单例模型&quot; class=&quot;headerlink&quot; title=&quot;单例模型&quot;&gt;&lt;/a&gt;单例模型&lt;/h1&gt;&lt;h2 id=&quot;定义：保证一个类仅有一个实例，并且提供一个全局访问点&quot;&gt;&lt;a href=&quot;#定义：保证一个类仅有一个实例，并且提供
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>我的第一篇blog</title>
    <link href="http://yoursite.com/2019/06/11/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87blog/"/>
    <id>http://yoursite.com/2019/06/11/我的第一篇blog/</id>
    <published>2019-06-11T12:19:08.000Z</published>
    <updated>2019-06-11T12:19:08.852Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>第一篇的：</title>
    <link href="http://yoursite.com/2019/06/11/%E7%AC%AC%E4%B8%80%E7%AF%87%E7%9A%84%EF%BC%9A/"/>
    <id>http://yoursite.com/2019/06/11/第一篇的：/</id>
    <published>2019-06-11T12:18:07.000Z</published>
    <updated>2019-06-11T12:18:08.001Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2019/06/11/hello-world/"/>
    <id>http://yoursite.com/2019/06/11/hello-world/</id>
    <published>2019-06-11T01:47:33.525Z</published>
    <updated>2019-06-11T01:47:33.525Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
